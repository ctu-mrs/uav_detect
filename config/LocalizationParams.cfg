#!/usr/bin/env python

## Depth blob detection parameters
# Parameters are listed in the order in which the corresponding
# operations are executed (except for deprecated parameters).

PACKAGE='uav_detect'
import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator();

params = gen.add_group("UAV localization parameters");

params.add("xy_covariance_coeff", double_t, 1, "covariance of the detection measurement in the XY direction (in camera CS)", 0.1, 0.01, 1.0);
params.add("z_covariance_coeff", double_t, 1, "covariance of the detection measurement in the Z direction (in camera CS)", 0.1, 0.01, 1.0);

params.add("max_update_divergence", double_t, 1, "maximal divergence between a measurement and a LKF for the measurement to be considered for association to a LKF", 5.0, 0.01, 1000.0);
params.add("max_lkf_uncertainty", double_t, 1, "if a LKF exceeds this uncertainty, it is kicked out of the pool of active LKFs", 3.0, 0.1, 20.0);

params.add("lkf_process_noise_pos", double_t, 1, "process noise of the LKF position states (scaled to seconds)", 1.0, 0.1, 20.0);
params.add("lkf_process_noise_vel", double_t, 1, "process noise of the LKF velocity states (scaled to seconds)", 3.0, 0.1, 20.0);

params.add("init_vel_cov", double_t, 1, "initial covariance of velocity states at LKF initialization", 4.0, 0.1, 20.0);
params.add("min_corrs_to_consider", int_t, 1, "a LKF must have received at least this many corrections before it is considered as a candidate for publishing", 20, 0, 100);

exit(gen.generate(PACKAGE, "uav_detect", "LocalizationParams"))
